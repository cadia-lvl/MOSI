{% extends "__base.jinja" %}
{% block body %}
    <style>
    .btn-outline-primary {
        color: white;
    }
    .btn-outline-primary:not(:disabled):not(.disabled):active, .btn-outline-primary:not(:disabled):not(.disabled).active, .show > .btn-outline-primary.dropdown-toggle {
        background-color: #00bc8c;
    }
    </style>

    <div class='row mb-3 mt-md-0 mt-n4 mb-5'>
        <div class='col-xl-6 col-md-8 offset-xl-3 offset-md-2 col-12'>
            <p class='text-center'>
                <span class='rounded-pill bg-secondary text-success px-2 py-1 mt-3'>
                    <span id='currentIndexSpan'></span>/<span id='totalIndexSpan'></span>
                </span>
            </p>
            <div class="progress">
                <div class="progress-bar bg-success" id='tokenProgress' role="progressbar"></div>
            </div>
        </div>
    </div>

    <div id="mosUI">
        <div class='row'>
            <div class='col-xl-6 col-md-8 offset-xl-3 offset-md-2 col-12 mb-2'>
                {% if mos.help_text %}
                    <p class="pt-2">{{ mos.help_text }}</p>
                {% endif %}
            </div>
            <div class='col-xl-6 col-md-8 offset-xl-3 offset-md-2 col-12 mb-2'>
                {% include 'mos_token_card.jinja' %}
            </div>
        </div>
        <div class='row mt-2'>
            <div class='col-12 text-center'>
                <audio id="audio-recording" src={{recordings_url[0]}} type="audio/wav"></audio>
                <button type='button' id="play" class='btn btn-success rounded-pill'>
                    <i id='playButtonIcon' class='fa fa-play'></i>
                </button>
            </div>
        </div>
      <div class='my-4'>
            {% if mos.question %}
                <div class='col-xl-6 col-md-8 offset-xl-3 offset-md-2 col-12 mb-4'>
                    <h3>{{ mos.question }}</h3>
                </div> 
            {% endif %}
            <form class="text-center" id="ratingButtons">
                <div class="btn-group btn-group-toggle" data-toggle="buttons">
                    <label class="btn btn-outline-primary center-block border-success rounded-pill-left" name="optionsLabel">
                        <input class="mx-3 ratingButton" type="radio" name="options" onchange="getRating(value)" id="option1" value="1">1
                    </label>
                    <label class="btn btn-outline-primary center-block border-success" name="optionsLabel">
                        <input class="mx-3 ratingButton" type="radio" name="options" onchange="getRating(value)" id="option2" value="2">2
                    </label>
                    <label class="btn btn-outline-primary center-block border-success" name="optionsLabel">
                        <input class="mx-3 ratingButton" type="radio" name="options" onchange="getRating(value)" id="option3" value="3">3
                    </label>
                    <label class="btn btn-outline-primary center-block border-success" name="optionsLabel">
                        <input class="mx-3 ratingButton" type="radio" name="options" onchange="getRating(value)" id="option4" value="4">4
                    </label>
                    <label class="btn btn-outline-primary center-block border-success rounded-pill-right" name="optionsLabel">
                        <input class="mx-3 ratingButton" type="radio" name="options" onchange="getRating(value)" id="option5" value="5">5
                    </label>
                </div>
            </form>
        </div>
    </div>

    <div class='row'>
        <div class='col-xl-6 col-md-8 offset-xl-3 offset-md-2 col-12 controls mb-3 d-flex justify-content-between'>
            <button id='prev' class='btn btn-sm btn-secondary rounded-pill' type='button'>
                <i class='fa fa-arrow-left mr-1 ml-1'></i>
                <span class='font-weight-bold mr-1'>Fyrri</span>
            </button>

            <button id='next' class='btn btn-sm btn-secondary rounded-pill' type='button'>
                <span class='font-weight-bold ml-1 mr-1'>Næsti</span>
                <i class='fa fa-arrow-right mr-1'></i>
            </button>

            <button type='submit' id='send' type='button' class='btn btn-success rounded-pill float-right'>
                Klára
                <i id='finishButtonIcon' class='ml-2 fa fa-arrow-right'></i>
            </button>
        </div>
    </div>
{% endblock %}

{% block scripts %}
    {{super()}}
    <script src='{{url_for("main.static", filename="js/error.js")}}'></script>
    <script type='text/javascript'>
        var postRatingsRoute = "{{url_for('mos.post_mos_rating', id=mos.id)}}";
        var user_id = {{user.id}};
        var mos_id = {{mos.id}}
        var recordings = {{recordings}}
        var recordings_url = {{recordings_url}}
        var mos_list = {{json_mos}}
    </script>
    <script>
        'use strict';
        window.onbeforeunload = function() {
            return "Are you sure?";
        };
        window.onload = function(){
            setRatingsButtonsOff()
        }
        let mediaRecorder;
        let recorderSettings;
        let audioCtx;
        let recordedBlobs;
        let streamProcessor;
        let ws;
        let micSurfer;
        let stream;
        let meter;

        var mosIndex = 0; // At what utterance are we now?
        var numMosInstances = mos_list.length;

        //token stuff
        const tokenText = document.querySelector("#tokenText");
        const tokenIDSpan = document.querySelector("#tokenID");
        const tokenHref= document.querySelector("#tokenHref");
        const tokenfileIDSpan = document.querySelector("#tokenFileID");
        const tokenProgress = document.querySelector('#tokenProgress');
        const currentIndexSpan = document.querySelector('#currentIndexSpan');
        const totalIndexSpan = document.querySelector('#totalIndexSpan');
        const tokenCard = document.querySelector('#tokenCard');

        //buttons
        const nextButton = document.querySelector('button#next');
        const prevButton = document.querySelector('button#prev');
        const playButton = document.querySelector('button#play');
        const finishButton = document.querySelector('button#send');
        const finishButtonIcon = $('#finishButtonIcon');

        //radio
        const ratingButtons = document.getElementById('ratingButtons')

        //audio
        let recordingAudio = document.querySelector('audio#audio-recording');
        let playButtonIcon = $('#playButtonIcon');


        const startTime = new Date();


        // ------------- register listeners ------------
        nextButton.addEventListener('click', nextAction);
        prevButton.addEventListener('click', prevAction);
        playButton.addEventListener('click', playAction);
        finishButton.addEventListener('click', finishAction);
        $(window).keyup(function (e) {
            if (e.key === ' ' || e.key === 'Spacebar'  || e.keyCode === 38 || e.keyCode === 87) {
                // spacebar, arrow-up or "w"
                e.preventDefault()
                playAction();
            } else if(e.keyCode === 65){ //"a"
                prevAction();
            } else if(e.keyCode === 68){ //"d"
                nextAction();
            } else if(e.keyCode === 40 || e.keyCode === 83){ // arrow-down or "s"
                playAction();
            }
        });

        // ---------------- Actions --------------------
        function nextAction(){
            // Increment the sentence index and update the UI
            if(mosIndex < numMosInstances - 1 && !nextButton.disabled){
                mosIndex += 1;
                $( "#mosUI" ).animate({
                    opacity: 0.0
                    }, 200, function() {
                        updateUI();
                });
            }
        }

        function prevAction(){
            // Decrement the sentence index and update the UI
            if(mosIndex > 0){
                mosIndex -= 1;
                $( "#mosUI" ).animate({
                    opacity: 0.0
                    }, 200, function() {
                        updateUI();
                });
            }
        }


        function playAction(){
            // Play the recording for the sentence at the current index.
            recordingAudio.src = recordings_url[mosIndex]
            play(recordings[mosIndex].id)
        }

        var isPlaying = false;
        var currentId;
        var audio;

        function getRating(value){
            mos_list[mosIndex]['rating'] = value
            setFinishButtonUI();
        }

        function setRatingsButtonsOn(){
            $("#ratingButtons").css('opacity', 1);
            var buttons = document.getElementsByClassName("ratingButton");
            for(var i = 0; i < buttons.length; i++){
                $(buttons[i]).prop('disabled', false);
            }
        }

        function setRatingsButtonsOff(){
            $("#ratingButtons").css('opacity', 0.2);
            var buttons = document.getElementsByClassName("ratingButton");
            for(var i = 0; i < buttons.length; i++){
                $(buttons[i]).prop('disabled', true);
            }
        }
        function play(id){
            if(isPlaying){
                //stop
                isPlaying = false;
                playButtonIcon.removeClass('fa-stop').addClass('fa-play');
                audio.pause();
                audio.currentTime = 0;
                // play the other clip if another id was chosen
                if(id !== currentId){
                    play(id);
                }
            } else{
                //start
                //isPlaying = true;
                currentId = id;
                audio = recordingAudio;
                // set listeners
                audio.onplaying = function(){
                    isPlaying = true;
                }
                audio.onpause = function(){
                    isPlaying = false;
                }
                audio.onended = function(){
                    playButtonIcon.removeClass('fa-stop').addClass('fa-play');
                    mos_list[mosIndex]['is_played'] = true;
                    setRatingsButtonsOn();
                    setButtonUI();
                    setFinishButtonUI();
                }
                // play audio
                playButtonIcon.removeClass('fa-play').addClass('fa-stop');
                audio.play();
            }
        }
        function finishAction(){
            finishButtonIcon.removeClass('fa-arrow-right').addClass('fa-spinner').addClass('fa-spin');
            var xhr = new XMLHttpRequest();
            xhr.onload = function(e) {
                if(this.readyState === XMLHttpRequest.DONE) {
                    finishButtonIcon.removeClass('fa-spinner').removeClass('fa-spin');
                    if(xhr.status == '200'){
                        // if we finish we go straight to the session
                        var mos_url = xhr.responseText;
                        finishButtonIcon.addClass('fa-check');

                        window.onbeforeunload = null;
                        window.location = mos_url;
                    } else{
                        finishButtonIcon.addClass('fa-times');
                        finishButton.classList.add('btn-danger');
                        promptError("Villa koma upp við að senda upptökur", xhr.responseText,"");
                    }
                }
                finishButton.disabled = true;
            };
            for(var i = 0; i < mos_list.length; i++){
                mos_list[i]['placement'] = i + 1
            }
            var fd = new FormData();
            fd.append('duration', JSON.stringify((new Date().getTime() - startTime.getTime())/1000));
            fd.append('user_id', user_id);
            fd.append('mos_id', mos_id);
            fd.append('mos_list', JSON.stringify(mos_list));
            xhr.open("POST", postRatingsRoute, true);
            xhr.send(fd);
        }


        // ---------------- UI configuration --------------------
        async function updateUI(){
            setTokenUI();
            setProgressUI(mosIndex + 1);
            setButtonUI();
            setFinishButtonUI();
            setRadioUI();

            $( "#mosUI" ).animate({
                opacity: 1.0
            }, 300);
        }

        function setProgressUI(i){
            var ratio = (i / numMosInstances) * 100;
            tokenProgress.style.width = `${ratio.toString()}%`;
            currentIndexSpan.innerHTML = i;
        }


        function setTokenUI(){
            tokenText.innerHTML = mos_list[mosIndex]['text'];
            if (mos_list[mosIndex]['token'] != null){
                //tokenfileIDSpan.innerHTML = '#' + mos_list[mosIndex]['token']['id'];
                tokenHref.href = mos_list[mosIndex]['token']['url'];
            }
            else{
                tokenfileIDSpan.innerHTML = ''
                tokenHref.href = ''
            }
        };

        function setRadioUI(){
            var labels = ratingButtons.getElementsByTagName('label');
            for(let i = 0; i < labels.length; i++){
                labels[i].classList.remove("active");
            }
            if(mos_list[mosIndex]['rating']){
                labels[mos_list[mosIndex]['rating']-1].classList.add("active");
            }
            if(mos_list[mosIndex]['is_played']){
                setRatingsButtonsOn()
            }
            else{
                //setRatingsButtonsOn()
                setRatingsButtonsOff()
            }
            /*
            if(mos_list[mosIndex]['rating']){
                ratingButtons.options[mos_list[mosIndex]['rating']].checked=true;
            }
            else{
                for(let i = 0; i < ratingButtons.options.length; i++){
                    ratingButtons.options[i].checked = false;
                }
            }
            */
        }

        function setButtonUI(){
            prevButton.disabled = false;
            nextButton.disabled = false;
            nextButton.style.display = "";

            if (mosIndex == 0) {
                prevButton.disabled = true;
            }
            if (!mos_list[mosIndex]['is_played']) {
                nextButton.disabled = true;
            }
            if (mosIndex == numMosInstances -1) {
                nextButton.disabled = true;
                nextButton.style.display = "none"
            }
        }

        function setFinishButtonUI(){
            if (mosIndex == numMosInstances -1 && !mos_list[mosIndex]['is_played']) {
                finishButton.disabled = true;
                finishButton.style.display = "";
            } else if (mosIndex == numMosInstances -1) {
                finishButton.disabled = false;
                finishButton.style.display = "";
            } else {
                finishButton.disabled = true;
                finishButton.style.display = "none";
            }
            return false;
        }

        function setLiveUI(type){
            switch(type){
                case 'wait':
                    tokenCard.style.borderWidth = '2px';
                    tokenCard.classList.remove('border-success');
                    tokenCard.classList.add('border-warning');
                    skipButton.disabled = true;
                    nextButton.disabled = true;
                    prevButton.disabled = true;
            }
        }

        // --------------------- Initialize UI --------------------------
        totalIndexSpan.innerHTML = numMosInstances;
        updateUI();

    </script>
{% endblock %}